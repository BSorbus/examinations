//document.addEventListener('turbolinks:load', function() {
$(document).ready(function() {

  // Provinces (Wojewodztwa)
  function provinceFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };
  function provinceFormatSelection(item) {
    //document.getElementById("area_province_code").value = item.terytId;
    //document.getElementById("area_province_name").value = item.name;
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  $('.select2teryt_provinces').select2({
    minimumInputLength: 0,
    allowClear: false,
    ajax: {
      //url: "/teryt/provinces_select2_index.json",
      url: "/pit_teryt/provinces.json",
      dataType: 'json',
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 16,
          page: 1
        }
      },
      // results: function(data, page) {
      //   return { results: data, more: false };
      // }
      results: function(data, page) {
        //var more = (page * 10) < data.meta.totalCount;
        //return { results: data, more: false };
        //var more = (page * 16) < data.total_count;
        var more = (page * 16) < data.meta.total_count;
        var provinces = $.map(data.provinces, function(province, i) {
          return { data_obj: province, id: province.id, text: province.name };
        });
        return { results: provinces, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    initSelection: function(element, callback) {
      var id=$(element).val();
      if (id!=="") {
        $.get("/pit_teryt/provinces/"+id+".json", function(data_from_json) {
          if(data_from_json)
            callback({ id: data_from_json.id, text: data_from_json.name });
        });
      }
    },
    //formatResult: provinceFormatResult, // omitted for brevity, see the source of this page
    //formatSelection: provinceFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  })
  .on("select2-selecting", function(e) {
    //$("#yourSelector").select2("data", { id: 1, text: "Some Text" });
    $("#district_id_select").select2("val", "")
    $("#district_id_select").select2("readonly", false);
    $("#commune_id_select").select2("val", "")
    $("#commune_id_select").select2("readonly", true);
    $("#city_id_select").select2("val", "")
    $("#city_id_select").select2("readonly", true);
    $("#street_id_select").select2("val", "")
    $("#street_id_select").select2("readonly", true);
  });


  // ProvinceDistricts (Powiaty w Wojewodztwie)
  function getProvinceDistrictsURL(province) {
    return "/pit_teryt/provinces/" + province + "/districts.json"
  }

  function districtFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  function districtFormatSelection(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  $('.select2teryt_province_districts').select2({
    minimumInputLength: 0,
    allowClear: false,
    ajax: {
      //url: "/teryt/province_districts_select2_index.json",
      //url: "/teryt/provinces/:province_id/districts.json",
      //url: "/pit_teryt/provinces/" + $("#province_id_select").select2("val") + "/districts.json",
      url: function() {
        // return "/pit_teryt/provinces/" + $("#province_id_select").select2("val") + "/districts.json"
        // or
        return getProvinceDistrictsURL( $("#province_id_select").select2("val") )
      },
      dataType: 'json',
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 50,
          page: page
          // ,province_id: $("#province_id_select").select2("val")
        }
      },
      results: function(data, page) {
        var more = (page * 50) < data.meta.total_count;
        var districts = $.map(data.districts, function(district, i) {
          return { data_obj: district, id: district.id, text: district.name };
        });
        return { results: districts, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    initSelection: function(element, callback) {
      var id=$(element).val();
      if (id!=="") {
        $.get("/pit_teryt/provinces/" + $("#province_id_select").select2("val") + "/districts/"+id+".json", function(data_from_json) {
          if(data_from_json)
            callback({ id: data_from_json.id, text: data_from_json.name });
        });
      }
    },
    //formatResult: districtFormatResult, // omitted for brevity, see the source of this page
    //formatSelection: districtFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  })
  .on("select2-selecting", function(e) {
    //$("#yourSelector").select2("data", { id: 1, text: "Some Text" });
    $("#commune_id_select").select2("val", "")
    $("#commune_id_select").select2("readonly", false);
    $("#city_id_select").select2("val", "")
    $("#city_id_select").select2("readonly", true);
    $("#street_id_select").select2("val", "")
    $("#street_id_select").select2("readonly", true);
  });



  // DistrictCommunes (Gminy w Powiecie)
  function getDistrictCommunesURL(district) {
    return "/pit_teryt/districts/" + district + "/communes.json"
  }

  function communeFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.type.name + '&nbsp][&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  function communeFormatSelection(item) {
    //document.getElementById("area_commune_code").value = item.code;
    //document.getElementById("area_commune_name").value = item.name;
    //document.getElementById("area_commune_type_code").value = item.type.code;
    //document.getElementById("area_commune_type_name").value = item.type.name;
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.type.name + '&nbsp][&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  $('.select2teryt_district_communes').select2({ 
    minimumInputLength: 0,
    allowClear: false,
    ajax: {
      //url: "/teryt/district_communes.json",
      //url: "/teryt/district_communes_select2_index.json",
      //url: "/pit_teryt/districts/" + $("#district_id_select").select2("val") + "/communes.json"
      url: function() {
        // return "/pit_teryt/districts/" + $("#district_id_select").select2("val") + "/communes.json"
        // or
        return getDistrictCommunesURL( $("#district_id_select").select2("val") )
      },
      dataType: 'json',
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 50,
          page: page
        };
      },
      results: function(data, page) {
        var more = (page * 50) < data.meta.total_count;
        var communes = $.map(data.communes, function(commune, i) {
          return { data_obj: commune, id: commune.id, text: commune.name };
        });
        return { results: communes, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    initSelection: function(element, callback) {
      var id=$(element).val();
      if (id!=="") {
        $.get("/pit_teryt/districts/" + $("#district_id_select").select2("val") + "/communes/"+id+".json", function(data_from_json) {
          if(data_from_json)
            callback({ id: data_from_json.id, text: data_from_json.name });
        });
      }
    },
    //formatResult: communeFormatResult, // omitted for brevity, see the source of this page
    //formatSelection: communeFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  })
  .on("select2-selecting", function(e) {
    $("#city_id_select").select2("val", "")
    $("#city_id_select").select2("readonly", false);
    $("#street_id_select").select2("val", "")
    $("#street_id_select").select2("readonly", true);
  });



  // CommuneCities (MiejscowoÅ›ci w Gminie)
  function getCommuneCitiesURL(commune) {
    return "/pit_teryt/communes/" + commune + "/cities.json"
  }

  function cityFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.type.name + '&nbsp][&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  function cityFormatSelection(item) {
    //document.getElementById("area_city_code").value = item.code;
    //document.getElementById("area_city_name").value = item.name;
    //document.getElementById("area_city_type_code").value = item.type.code;
    //document.getElementById("area_city_type_name").value = item.type.name;
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.type.name + '&nbsp][&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  $('.select2teryt_commune_cities').select2({ 
    minimumInputLength: 0,
    allowClear: false,
    ajax: {
      //url: "/teryt/commune_cities.json",
      //url: "/teryt/commune_cities_select2_index.json",
      //url: "/pit_teryt/communes/" + $("#commune_id_select").select2("val") + "/cities.json"
      url: function() {
        // return "/pit_teryt/communes/" + $("#commune_id_select").select2("val") + "/cities.json"
        // or
        return getCommuneCitiesURL( $("#commune_id_select").select2("val") )
      },
      dataType: 'json',
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 50,
          page: page
        };
      },
      results: function(data, page) {
        var more = (page * 50) < data.meta.total_count;
        var cities = $.map(data.cities, function(city, i) {
          return { data_obj: city, id: city.id, text: city.name };
        });
        return { results: cities, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    initSelection: function(element, callback) {
      var id=$(element).val();
      if (id!=="") {
        $.get("/pit_teryt/communes/" + $("#commune_id_select").select2("val") + "/cities/"+id+".json", function(data_from_json) {
          if(data_from_json)
            callback({ id: data_from_json.id, text: data_from_json.name });
        });
      }
    },
    //formatResult: cityFormatResult, // omitted for brevity, see the source of this page
    //formatSelection: cityFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  })
  .on("select2-selecting", function(e) {
    $("#street_id_select").select2("val", "")
    $("#street_id_select").select2("readonly", false);
  });


  // CityStreets (Gminy w Powiecie)
  function getCityStreetsURL(city) {
    return "/pit_teryt/cities/" + city + "/streets.json"
  }

  function streetFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.type.name + '&nbsp][&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  function streetFormatSelection(item) {
    //document.getElementById("area_street_code").value = item.code;
    //document.getElementById("area_street_name").value = item.name;
    //document.getElementById("area_street_type_code").value = item.type.code;
    //document.getElementById("area_street_type_name").value = item.type.name;
    if (isEmpty(item.id)) {
      return "";
    } else {
      return  item.data_obj.name + '&nbsp&nbsp<span class="pull-right">[&nbsp' + item.data_obj.type.name + '&nbsp][&nbsp' + item.data_obj.terytId + '&nbsp]</span>';
    }
  };

  $('.select2teryt_city_streets').select2({ 
    minimumInputLength: 0,
    // allowClear: false not include blank,
    allowClear: true,
    ajax: {
      //url: "/teryt/city_streets.json",
      //url: "/teryt/city_streets_select2_index.json",
      //url: "/pit_teryt/cities/" + $("#city_id_select").select2("val") + "/streets.json"
      url: function() {
        // return "/pit_teryt/cities/" + $("#city_id_select").select2("val") + "/streets.json"
        // or
        return getCityStreetsURL( $("#city_id_select").select2("val") )
      },
      dataType: 'json',
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 10,
          page: page
        };
      },
      results: function(data, page) {
        var more = (page * 10) < data.meta.total_count;
        var streets = $.map(data.streets, function(street, i) {
          return { data_obj: street, id: street.id, text: street.streetName };
        });
        return { results: streets, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    initSelection: function(element, callback) {
      var id=$(element).val();
      if (id!=="") {
        $.get("/pit_teryt/cities/" + $("#city_id_select").select2("val") + "/streets/"+id+".json", function(data_from_json) {
          if(data_from_json)
            callback({ id: data_from_json.id, text: data_from_json.streetName });
        });
      }
    },
    //formatResult: streetFormatResult, // omitted for brevity, see the source of this page
    //formatSelection: streetFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  });
  // .on("select2-selecting", function(e) {
  //   document.getElementById("id_submit_button").disabled = false; 
  // })






  function itemFormatResult(item) {
    if (isEmpty(item.id)) {
      return "";
    } else {
      if (item.data_obj.streetName) {
        return  '<div>' + item.data_obj.cityName + ',&nbsp&nbsp' + item.data_obj.streetAttribute + '&nbsp' + item.data_obj.streetName + 
                                          '<span class="pull-right"><small>[&nbsp' + item.data_obj.provinceName + '&nbsp]</small></span><br>' +
                '<span><small>&nbsp&nbsp&nbsp&nbsp&nbsp[&nbsp' + item.data_obj.cityType + '&nbsp]</small></span>' +
                                          '<span class="pull-right"><small>[&nbsp' + item.data_obj.districtName + '&nbsp]</small></span><br>' +
                '<span><small>&nbsp&nbsp&nbsp&nbsp&nbsp[&nbsp' + item.data_obj.postCode + '&nbsp]</small></span>' +
                                          '<span class="pull-right"><small>[&nbsp' + item.data_obj.communeName + '&nbsp]</small></span></div><br>';
      } else {
        return  '<div>' + item.data_obj.cityName + 
                                          '<span class="pull-right"><small>[&nbsp' + item.data_obj.provinceName + '&nbsp]</small></span><br>' +
                '<span><small>&nbsp&nbsp&nbsp&nbsp&nbsp[&nbsp' + item.data_obj.cityType + '&nbsp]</small></span>' +
                                          '<span class="pull-right"><small>[&nbsp' + item.data_obj.districtName + '&nbsp]</small></span><br>' +
                '<span><small>&nbsp&nbsp&nbsp&nbsp&nbsp[&nbsp' + item.data_obj.postCode + '&nbsp]</small></span>' +
                                          '<span class="pull-right"><small>[&nbsp' + item.data_obj.communeName + '&nbsp]</small></span></div><br>';
      } 
    }
  };

  function itemFormatSelection(item) {
    //document.getElementById("area_item_code").value = item.code;
    //document.getElementById("area_item_name").value = item.name;
    if (isEmpty(item.id)) {
      return "";
    } else {
      if (item.data_obj.streetName) {
        return  '<div>' + item.data_obj.cityName + ',&nbsp&nbsp' + item.data_obj.streetAttribute + '&nbsp' + item.data_obj.streetName + 
                                          '<span class="small pull-right">' + item.data_obj.cityType + '&nbsp[&nbsp' + item.data_obj.provinceName + 
                                          ',&nbsp' + item.data_obj.districtName + 
                                          ',&nbsp' + item.data_obj.communeName + '&nbsp]</span></div>';
      } else {
        return  '<div>' + item.data_obj.cityName +  
                                          '<span class="small pull-right">' + item.data_obj.cityType + '&nbsp[&nbsp' + item.data_obj.provinceName + 
                                          ',&nbsp' + item.data_obj.districtName + 
                                          ',&nbsp' + item.data_obj.communeName + '&nbsp]</span></div>';
      } 
    }
  };

  $('.select2teryt_items').select2({ 
    minimumInputLength: 5,
    allowClear: false,
    ajax: {
      url: "/pit_teryt/items.json",
      dataType: 'json',
      quietMillis: 250,
      type: 'GET',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 10,
          page: page -1
          //Uwaga! sztuczna mrowka gdyÅ¼ API PitTeryt zle obsluguje paginacje
        };
      },
      results: function(data, page) {
        var more = (page * 10) < data.meta.totalCount;
        var items = $.map(data.items, function(item, i) {
          return { data_obj: item, id: item.id, text: item.cityName };
        });
        return { results: items, more: more };
      }
    },
    formatAjaxError: function(jqXHR, textStatus, errorThrown) {
      console.log(jqXHR);
      if (jqXHR.status == 401) {
        window.location.reload();
      } else {
        getErrorMessage(jqXHR, jqXHR.status);
      }
      return errorThrown + " " + jqXHR.responseText;
    },
    initSelection: function(element, callback) {
      var id=$(element).val();
      if (id!=="") {
        $.get("/pit_teryt/items/"+id+".json", function(data_from_json) {
          if(data_from_json)
            console.log(data_from_json);
            callback({ data_obj: data_from_json, id: data_from_json.id, text: 'data_from_json.cityName' });
        });
      }
    },
    formatResult: itemFormatResult, // omitted for brevity, see the source of this page
    formatSelection: itemFormatSelection, // omitted for brevity, see the source of this page
    dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
    escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
  })
  .on("select2-selecting", function(e) {
    document.getElementById("proposal_c_address_postal_code").value = e.choice.data_obj.postCode;
  });


});

